(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(537),o=n.n(r),a=n(645),s=n.n(a),d=n(667),c=n.n(d),i=new URL(n(946),n.b),A=s()(o()),l=c()(i);A.push([e.id,'@font-face{font-family:"Poppins";src:url('+l+')}:root{--bg-color-light: rgb(44, 44, 56);--bg-color-dark: rgb(36, 36, 46);--bg-color-purple: rgb(116, 82, 227);--accent-color-grey: rgba(200, 200, 200, 0.6);--accent-color-darkGrey: rgba(200, 200, 200, 0.9);--font-color-primary: white;--font-color-secondary: #5A5B69;--font-size-small: 0.75rem;--letter-spacing: 2px;--padding-main: 20px;--padding-less: 10px;--gap-main: 10px;--border-radius-hi: 20px;--border-radius-lo: 8px;--box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2)}::-webkit-scrollbar{width:10px}::-webkit-scrollbar-track{box-shadow:inset 0 0 5px gray;border-radius:10px}::-webkit-scrollbar-thumb{background:var(--accent-color-darkGrey);border-radius:10px}*{font-family:"Poppins",sans-serif;box-sizing:border-box;margin:0;padding:0}body{height:100vh;display:flex;color:var(--font-color-primary)}textarea{resize:none}.settingsIcon{background:none;border:none;color:var(--font-color-primary);font-weight:bold;cursor:pointer;border-radius:50%;width:25px;height:25px}.settingsIcon:hover{background-color:var(--accent-color-darkGrey)}.dropdownContainer{position:relative}.dropdown{display:none;position:absolute;top:40px;right:0;z-index:1;background-color:var(--bg-color-light);width:160px;box-shadow:var(--box-shadow);padding:var(--padding-main);border-radius:var(--border-radius-lo);font-size:.8rem;cursor:pointer}.sidebar{padding:var(--padding-main);flex:1;background-color:var(--bg-color-light)}.sidebar p{cursor:pointer;border-radius:3px}.sidebar__createNew{color:var(--bg-color-purple)}.sidebar p:hover{transform:scale(1.1);background-color:gray}.currentProject{padding:var(--padding-main);flex:3;background-color:var(--bg-color-dark)}.currentProject__header{display:flex;justify-content:space-between;align-items:center}.currentProject__header-rightContent{display:flex;align-items:center;gap:10px}.currentProject__header-addTask{border-radius:var(--border-radius-hi);padding:10px 20px;background-color:var(--bg-color-light);color:var(--font-color-primary);border:none;cursor:pointer}.currentProject__header-projectSettings:hover{background-color:var(--accent-color-grey)}.currentProject__tasks{display:flex;justify-content:center;gap:var(--gap-main)}.currentProject__tasks>div{width:200px}.currentProject__tasks>div>h3{font-size:var(--font-size-small);color:var(--font-color-secondary);letter-spacing:var(--letter-spacing)}.modalContainer{position:absolute;height:100vh;width:100vw;background-color:rgba(0,0,0,.5);display:flex;justify-content:center;align-items:center;pointer-events:none;opacity:0}.modalContainer--show{pointer-events:auto;opacity:1}.addTaskModal,.addProjectModal,.taskViewModal{width:400px;padding:var(--padding-main);border-radius:var(--border-radius-lo);background-color:var(--bg-color-light);display:flex;flex-direction:column;gap:10px}.addTaskModal input,.addTaskModal textarea,.addTaskModal select,.addTaskModal option,.addProjectModal input,.addProjectModal textarea,.addProjectModal select,.addProjectModal option,.taskViewModal input,.taskViewModal textarea,.taskViewModal select,.taskViewModal option{background:none;border:1px solid rgba(200,200,200,.2);border-radius:var(--border-radius-lo);padding:5px;color:#fff}.addTaskModal__subtasksContainer,.addProjectModal__subtasksContainer,.taskViewModal__subtasksContainer{display:flex;flex-direction:column;gap:10px;overflow:auto;max-height:86px}.addTaskModal__subtask,.addProjectModal__subtask,.taskViewModal__subtask{display:flex}.addTaskModal__subtask input,.addProjectModal__subtask input,.taskViewModal__subtask input{flex:1}.addTaskModal__subtask-remove,.addProjectModal__subtask-remove,.taskViewModal__subtask-remove{background:none;border:none;padding:4px;font-size:20px;font-weight:bold;color:var(--accent-color-grey)}.addTaskModal__addNewSubtask,.addProjectModal__addNewSubtask,.taskViewModal__addNewSubtask{border:none;border-radius:var(--border-radius-hi);padding:10px;background-color:#fff;color:gray;font-weight:bold}.addTaskModal__createTask,.addProjectModal__createTask,.taskViewModal__createTask{background:none;border:none;border-radius:var(--border-radius-hi);padding:10px;background-color:var(--bg-color-purple);color:#fff;font-weight:bold}.taskViewModal__topContent{display:flex;justify-content:space-between}.taskViewModal__subtaskContainer{display:flex;flex-direction:column;gap:var(--gap-main)}.taskViewModal__subtask{align-items:center;gap:var(--gap-main);padding:var(--padding-less);border-radius:var(--border-radius-lo);background-color:var(--bg-color-dark)}.taskViewModal__subtask>input{flex:0}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,WACI,qBAAA,CACA,2CAAA,CAIJ,MACI,iCAAA,CACA,gCAAA,CACA,oCAAA,CAEA,6CAAA,CACA,iDAAA,CAEA,2BAAA,CACA,+BAAA,CAEA,0BAAA,CAEA,qBAAA,CAEA,oBAAA,CACA,oBAAA,CAEA,gBAAA,CAEA,wBAAA,CACA,uBAAA,CAEA,iDAAA,CAGJ,oBACE,UAAA,CAGF,0BACE,6BAAA,CACA,kBAAA,CAGF,0BACE,uCAAA,CACA,kBAAA,CAGF,EACI,gCAAA,CAEA,qBAAA,CACA,QAAA,CACA,SAAA,CAGJ,KACE,YAAA,CAEA,YAAA,CAEA,+BAAA,CAGF,SACE,WAAA,CAIF,cACE,eAAA,CACA,WAAA,CACA,+BAAA,CACA,gBAAA,CAEA,cAAA,CAEA,iBAAA,CACA,UAAA,CACA,WAAA,CAGF,oBACE,6CAAA,CAGF,mBACE,iBAAA,CAGF,UACE,YAAA,CACA,iBAAA,CACA,QAAA,CACA,OAAA,CACA,SAAA,CAEA,sCAAA,CACA,WAAA,CACA,4BAAA,CACA,2BAAA,CACA,qCAAA,CAEA,eAAA,CAEA,cAAA,CAKF,SACE,2BAAA,CACA,MAAA,CACA,sCAAA,CAEA,WACE,cAAA,CACA,iBAAA,CAGF,oBACE,4BAAA,CAGF,iBACE,oBAAA,CACA,qBAAA,CAIJ,gBACE,2BAAA,CACA,MAAA,CAEA,qCAAA,CAEA,wBACE,YAAA,CACA,6BAAA,CACA,kBAAA,CAGF,qCACE,YAAA,CACA,kBAAA,CACA,QAAA,CAGF,gCACE,qCAAA,CACA,iBAAA,CACA,sCAAA,CACA,+BAAA,CACA,WAAA,CAEA,cAAA,CAGF,8CACE,yCAAA,CAgBF,uBACE,YAAA,CACA,sBAAA,CACA,mBAAA,CAEF,2BACE,WAAA,CAEF,8BACE,gCAAA,CACA,iCAAA,CACA,oCAAA,CAKJ,gBACE,iBAAA,CACA,YAAA,CACA,WAAA,CAEA,+BAAA,CAEA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,mBAAA,CACA,SAAA,CAEA,sBACE,mBAAA,CACA,SAAA,CAIJ,8CACE,WAAA,CACA,2BAAA,CACA,qCAAA,CAEA,sCAAA,CAEA,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,+QACE,eAAA,CACA,qCAAA,CACA,qCAAA,CACA,WAAA,CAEA,UAAA,CAEF,uGACE,YAAA,CACA,qBAAA,CACA,QAAA,CACA,aAAA,CACA,eAAA,CAEF,yEACE,YAAA,CAEF,2FACE,MAAA,CAEF,8FACE,eAAA,CACA,WAAA,CAEA,WAAA,CACA,cAAA,CACA,gBAAA,CAEA,8BAAA,CAEF,2FACE,WAAA,CAEA,qCAAA,CACA,YAAA,CAEA,qBAAA,CACA,UAAA,CACA,gBAAA,CAEF,kFACI,eAAA,CACA,WAAA,CAEA,qCAAA,CACA,YAAA,CAEA,uCAAA,CACA,UAAA,CACA,gBAAA,CAKJ,2BACE,YAAA,CACA,6BAAA,CAEF,iCACE,YAAA,CACA,qBAAA,CACA,mBAAA,CAEF,wBACE,kBAAA,CACA,mBAAA,CAEA,2BAAA,CACA,qCAAA,CAEA,qCAAA,CAEF,8BACE,MAAA",sourcesContent:["@font-face {\n    font-family: 'Poppins';\n    src: url(./Poppins-Regular.ttf);\n}\n\n// ----------------- Global ----------------- //\n:root {\n    --bg-color-light: rgb(44, 44, 56);\n    --bg-color-dark: rgb(36, 36, 46);\n    --bg-color-purple: rgb(116, 82, 227);\n    \n    --accent-color-grey: rgba(200, 200, 200, 0.6);\n    --accent-color-darkGrey: rgba(200, 200, 200, 0.9);\n\n    --font-color-primary: white;\n    --font-color-secondary: #5A5B69;\n\n    --font-size-small: 0.75rem;\n\n    --letter-spacing: 2px;\n    \n    --padding-main: 20px;\n    --padding-less: 10px;\n\n    --gap-main: 10px;\n    \n    --border-radius-hi: 20px;\n    --border-radius-lo: 8px;\n\n    --box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n}\n\n::-webkit-scrollbar {\n  width: 10px;\n}\n\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 5px grey;\n  border-radius: 10px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: var(--accent-color-darkGrey);\n  border-radius: 10px;\n}\n\n* {\n    font-family: 'Poppins', sans-serif;\n\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n  height: 100vh;\n  \n  display: flex;\n  \n  color: var(--font-color-primary);\n}\n\ntextarea {\n  resize: none;\n}\n\n// ----------------- Component Classes ------ //\n.settingsIcon {\n  background: none;\n  border: none;\n  color: var(--font-color-primary);\n  font-weight: bold;\n\n  cursor: pointer;\n\n  border-radius: 50%;\n  width: 25px;\n  height: 25px;\n}\n\n.settingsIcon:hover {\n  background-color: var(--accent-color-darkGrey);\n}\n\n.dropdownContainer {\n  position: relative;\n}\n\n.dropdown {\n  display: none;\n  position: absolute;\n  top: 40px;\n  right: 0;\n  z-index: 1;\n\n  background-color: var(--bg-color-light);\n  width: 160px;\n  box-shadow: var(--box-shadow); \n  padding: var(--padding-main);\n  border-radius: var(--border-radius-lo);\n\n  font-size: 0.8rem;\n\n  cursor: pointer;\n}\n\n// ----------------- Components ------------- //\n\n.sidebar {\n  padding: var(--padding-main);\n  flex: 1;\n  background-color: var(--bg-color-light);\n\n  p {\n    cursor: pointer;\n    border-radius: 3px;\n  }\n\n  &__createNew {\n    color: var(--bg-color-purple);\n  }\n\n  p:hover {\n    transform: scale(1.1);\n    background-color: grey;\n  }\n}\n\n.currentProject {\n  padding: var(--padding-main);\n  flex: 3;\n  \n  background-color: var(--bg-color-dark);\n\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  &__header-rightContent {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  &__header-addTask {\n    border-radius: var(--border-radius-hi);\n    padding: 10px 20px;\n    background-color: var(--bg-color-light);\n    color: var(--font-color-primary);\n    border: none;\n\n    cursor: pointer;\n  }\n\n  &__header-projectSettings:hover {\n    background-color: var(--accent-color-grey);\n  }\n\n  // &__tasks > * {\n  //   background-color: var(--bg-color-light);\n    \n  //   border-radius: var(--border-radius-lo);\n    \n  //   width: 50%;\n    \n  //   margin: 20px auto;\n    \n  //   text-align: center;\n    \n  //   padding: 20px;\n  // }\n  &__tasks {\n    display: flex;\n    justify-content: center;\n    gap: var(--gap-main);\n  }\n  &__tasks > div {\n    width: 200px;\n  }\n  &__tasks > div > h3 {\n    font-size: var(--font-size-small);\n    color: var(--font-color-secondary);\n    letter-spacing: var(--letter-spacing);\n  }\n  \n}\n\n.modalContainer {\n  position: absolute;\n  height: 100vh;\n  width : 100vw;\n  \n  background-color: rgba(0, 0, 0, 0.5);\n  \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  pointer-events: none;\n  opacity: 0;\n\n  &--show {\n    pointer-events: auto;\n    opacity: 1;\n  }\n}\n\n.addTaskModal, .addProjectModal, .taskViewModal{\n  width: 400px;\n  padding: var(--padding-main);\n  border-radius: var(--border-radius-lo);\n  \n  background-color: var(--bg-color-light);\n  \n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  input,textarea,select,option {\n    background: none;\n    border: 1px solid rgba(200, 200, 200, 0.2);\n    border-radius: var(--border-radius-lo);\n    padding: 5px;\n    \n    color: white;\n  }\n  &__subtasksContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    overflow: auto;\n    max-height: 86px;\n  }\n  &__subtask {\n    display: flex;\n  }\n  &__subtask input {\n    flex: 1;\n  }\n  &__subtask-remove {\n    background: none;\n    border: none;\n    \n    padding: 4px;\n    font-size: 20px;\n    font-weight: bold;\n    \n    color: var(--accent-color-grey);\n  }\n  &__addNewSubtask {\n    border: none;\n    \n    border-radius: var(--border-radius-hi);\n    padding: 10px;\n    \n    background-color: white;\n    color: grey;\n    font-weight: bold;\n  }\n  &__createTask {\n      background: none;\n      border: none;\n  \n      border-radius: var(--border-radius-hi);\n      padding: 10px;\n  \n      background-color: var(--bg-color-purple);\n      color: white;\n      font-weight: bold;\n  }\n}\n\n.taskViewModal {\n  &__topContent {\n    display: flex;\n    justify-content: space-between;\n  }\n  &__subtaskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: var(--gap-main);\n  }\n  &__subtask {\n    align-items: center;\n    gap: var(--gap-main);\n\n    padding: var(--padding-less);\n    border-radius: var(--border-radius-lo);\n\n    background-color: var(--bg-color-dark);\n  }\n  &__subtask > input {\n    flex: 0;\n  }\n\n}\n \n\n\n\n\n\n\n\n"],sourceRoot:""}]);const u=A},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(s[c]=!0)}for(var i=0;i<e.length;i++){var A=[].concat(e[i]);r&&s[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),t.push(A))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),s=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(s).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},s=[],d=0;d<e.length;d++){var c=e[d],i=r.base?c[0]+r.base:c[0],A=a[i]||0,l="".concat(i," ").concat(A);a[i]=A+1;var u=n(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var C=o(p,r);r.byIndex=d,t.splice(d,0,{identifier:l,updater:C,references:1})}s.push(l)}return s}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var d=n(a[s]);t[d].references--}for(var c=r(e,o),i=0;i<a.length;i++){var A=n(a[i]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},946:(e,t,n)=>{e.exports=n.p+"35d26b781dc5fda684cc.ttf"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),s=n.n(a),d=n(565),c=n.n(d),i=n(216),A=n.n(i),l=n(589),u=n.n(l),p=n(192),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=s().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=A(),t()(p.Z,C),p.Z&&p.Z.locals&&p.Z.locals;class g{tasks=[];constructor(e){this.name=e}addTask(e,t,n,r){const o=new h(e,t,n,r);this.tasks.push(o)}removeTask(e){this.tasks.splice(e,1)}}class h{constructor(e,t,n,r){this.title=e,this.description=t,this.subtasks=n.map((e=>new m(e))),this.status=r}addSubtask(e){this.subtasks.push(new m(e))}removeSubtask(e){this.subtasks.splice(e,1)}changeStatusToDo(){this.status="To-Do"}changeStatusDoing(){this.status="Doing"}changeStatusDone(){this.status="Done"}getCompletedSubtaskCount(){let e=0;return this.subtasks.forEach((t=>{t.complete&&e++})),e}}class m{constructor(e){this.title=e,this.complete=!1}toggleComplete(){!1===this.complete?this.complete=!0:this.complete=!1}}const b={currentProjectIndex:-1,setCurrentProjectIndex(e){void 0!==this.currentProjectIndex?this.currentProjectIndex=e:this.currentProjectIndex=0},addProject(e){this.setCurrentProjectIndex(this.currentProjectIndex+1),k.addProject(e)},removeProject(e){this.setCurrentProjectIndex(this.currentProjectIndex-1),k.removeProject(e)},renderProjects(){const e=k.getProjects();return f.renderProjects(e)},addCurrentProjectTask(e,t,n,r){k.addTask(this.currentProjectIndex,e,t,n,r)},removeCurrentProjectTask(e){k.removeTask(this.currentProjectIndex,e)},getCurrentProjectTaskStatus(e){return k.projects[this.currentProjectIndex].tasks[e].status},setCurrentProjectTaskStatus(e,t){const n=k.getProject(this.currentProjectIndex);"To-Do"===e?n.tasks[t].changeStatusToDo():"Doing"===e?n.tasks[t].changeStatusDoing():"Done"===e&&n.tasks[t].changeStatusDone()},toggleCurrentProjectSubtaskStatus(e,t){k.getProject(this.currentProjectIndex).tasks[e].subtasks[t].toggleComplete()},renderCurrentProjectTitle(){return k.getProject(this.currentProjectIndex).name},renderCurrentProjectTaskCards(){const e=k.getProject(this.currentProjectIndex);return f.renderCurrentProjectTaskCards(e)},renderCurrentProjectTaskModal(e){const t=k.getProject(this.currentProjectIndex);return f.renderCurrentProjectTaskModal(t,e)}},k={projects:[],addProject:function(e){this.projects.push(new g(e))},removeProject:function(e){this.projects.splice(e,1)},getProjects:function(){return[...this.projects]},getProject:function(e){return this.projects[e]},addTask(e,t,n,r,o){this.projects[e].addTask(t,n,r,o)},removeTask(e,t){this.projects[e].removeTask(t)}},f={renderProjects:e=>e.map(((e,t)=>{const n=document.createElement("p");return n.textContent=e.name,n.dataset.index=t,n})),renderCurrentProjectTitle(e){const t=document.createElement("h2");return t.textContent=e,t},renderCurrentProjectTaskCards:e=>e.tasks.map(((e,t)=>{const n=document.createElement("h3");n.textContent=e.title;const r=e.subtasks.length,o=e.getCompletedSubtaskCount(),a=document.createElement("p");a.textContent=`${o} of ${r} subtasks`;const s=document.createElement("div");return s.dataset.index=t,s.dataset.status=e.status,s.appendChild(n),s.appendChild(a),s})),renderCurrentProjectTaskModal(e,t){const n=e.tasks[t],r=document.createElement("div");r.classList.add("taskViewModal__topContent");const o=document.createElement("h3");o.textContent=n.title;const a=document.createElement("div");a.className="dropdownContainer";const s=document.createElement("button");s.type="button",s.id="taskView-settings",s.classList.add("settingsIcon"),s.textContent="⋮";const d=document.createElement("div");d.id="taskView-dropdown",d.className="dropdown";const c=document.createElement("p");c.id="taskView-dropdownDeleteButton",c.textContent="Delete Task",c.dataset.index=t,a.appendChild(s),d.appendChild(c),a.appendChild(d),s.addEventListener("click",(function(){const e=document.getElementById("taskView-dropdown"),t=getComputedStyle(e).display;e.style.display="none"===t?"block":"none"})),r.appendChild(o),r.appendChild(a);const i=document.createElement("p");i.textContent=n.description;const A=n.subtasks.map((e=>{const t=document.createElement("div");t.classList.add("taskViewModal__subtask");const n=document.createElement("label");n.textContent=e.title;const r=document.createElement("input");return r.type="checkbox",r.checked=e.complete,t.appendChild(r),t.appendChild(n),t})),l=document.createElement("div");l.classList.add("taskViewModal__subtaskContainer"),l.id="taskViewSubtasksContainer",A.forEach((e=>l.appendChild(e)));const u=document.createElement("select"),p=document.createElement("option");p.value="To-Do",p.textContent="To-Do";const C=document.createElement("option");C.value="Doing",C.textContent="Doing";const g=document.createElement("option");return g.value="Done",g.textContent="Done",u.appendChild(p),u.appendChild(C),u.appendChild(g),{topContent:r,taskDescription:i,subtasksContainer:l,dropdownStatus:u}}},v={projectTitles:{clear(){document.getElementById("sidebarProjects").innerHTML=""},add(){const e=b.renderProjects(),t=document.getElementById("sidebarProjects");e.forEach((e=>{t.appendChild(e)}))},eventListeners(){document.querySelectorAll("#sidebarProjects > p").forEach((e=>{e.addEventListener("click",(()=>{E.switchCurrentProject(e.dataset.index)}))}))},refresh(){this.clear(),this.add(),this.eventListeners()}},createNewProject(e){b.addProject(e),this.projectTitles.refresh()}},x={tasks:{clear(){document.querySelectorAll("#currentProject-tasks > div > div").forEach((e=>{e.innerHTML=""}))},add(){if(b.currentProjectIndex<0)return;const e=b.renderCurrentProjectTaskCards(),t=document.getElementById("currentProject-tasks-toDoTaskContainer"),n=document.getElementById("currentProject-tasks-doingTaskContainer"),r=document.getElementById("currentProject-tasks-doneTaskContainer");e.forEach((e=>{const o=e.dataset.status;"To-Do"===o?t.appendChild(e):"Doing"===o&&n.appendChild(e),"Done"===o&&r.appendChild(e)}))},eventListeners(){const e=document.querySelectorAll("#currentProject-tasks > div > div > div"),t=document.getElementById("taskViewModalContainer"),n=document.getElementById("taskView");e.forEach((e=>{e.addEventListener("click",(()=>{t.classList.add("modalContainer--show");const r=e.dataset.index,o=b.renderCurrentProjectTaskModal(r),a=Array.from(o.dropdownStatus.getElementsByTagName("option")),s=b.getCurrentProjectTaskStatus(r);a.forEach((e=>{e.value===s&&(e.selected=!0)})),n.appendChild(o.topContent),n.appendChild(o.taskDescription),n.appendChild(o.subtasksContainer),n.appendChild(o.dropdownStatus),document.querySelectorAll("#taskViewSubtasksContainer > div > input").forEach(((e,t)=>{e.addEventListener("click",(()=>{b.toggleCurrentProjectSubtaskStatus(r,t),this.refresh()}))}));const d=document.querySelector("#taskView > select");d.addEventListener("change",(()=>{b.setCurrentProjectTaskStatus(d.value,r),x.refresh()})),document.getElementById("taskView-dropdownDeleteButton").addEventListener("click",(function(){x.deleteTask(this.dataset.index),document.getElementById("taskView-dropdown").style.display="none",document.getElementById("taskViewModalContainer").classList.toggle("modalContainer--show"),document.getElementById("taskView").innerHTML=""}))}))}))},refresh(){this.clear(),this.add(),this.eventListeners()}},title:{refresh(){let e;e=b.currentProjectIndex<0?"":b.renderCurrentProjectTitle(),document.getElementById("currentProjectTitle").textContent=e}},refresh(){this.title.refresh(),this.tasks.refresh()},createNewTask(e,t,n,r){b.addCurrentProjectTask(e,t,n,r),this.refresh()},deleteTask(e){b.removeCurrentProjectTask(e),this.refresh()}},E={removeCurrentProject(){const e=b.currentProjectIndex;e>=0&&(b.removeProject(e),this.refreshDashboard())},refreshDashboard(){v.projectTitles.refresh(),x.refresh()},switchCurrentProject(e){b.setCurrentProjectIndex(e),E.refreshDashboard()}},y={sideBar:v,currentProject:x,page:E,staticEventListeners:function(){document.getElementById("header-addNewTask").addEventListener("click",(()=>{e.classList.add("modalContainer--show")}));const e=document.getElementById("addTaskModalContainer");e.addEventListener("click",(t=>{t.target.classList.contains("addTaskModalContainer")&&e.classList.remove("modalContainer--show")})),document.getElementById("addNewSubtask").addEventListener("click",(()=>{const e=document.createElement("div");e.classList.add("addTaskModal__subtask");const t=document.createElement("input");t.setAttribute("name","subtasks"),t.setAttribute("id","subtasks");const n=document.createElement("button");n.setAttribute("id","remove-subtask"),n.setAttribute("class","addTaskModal__subtask-remove"),n.setAttribute("type","button"),n.textContent="x",e.appendChild(t),e.appendChild(n),document.getElementById("subtasksContainer").append(e)}));const t=document.getElementById("createTask");t.addEventListener("submit",(n=>{n.preventDefault();const r=t.elements.title.value,o=t.elements.description.value,a=Array.from(document.querySelectorAll('input[name="subtasks"]')).map((e=>e.value)),s=t.elements.status.value;x.createNewTask(r,o,a,s),t.reset(),e.classList.remove("modalContainer--show")})),document.getElementById("sidebarNewProject").addEventListener("click",(()=>{n.classList.add("modalContainer--show")}));const n=document.getElementById("addProjectModalContainer");n.addEventListener("click",(e=>{e.target.classList.contains("addProjectModalContainer")&&n.classList.remove("modalContainer--show")}));const r=document.getElementById("createProject");r.addEventListener("submit",(e=>{e.preventDefault();const t=r.elements.projectName.value;v.createNewProject(t),r.reset(),n.classList.remove("modalContainer--show");const o=document.querySelectorAll("#sidebarProjects > p");E.switchCurrentProject(o.length-1)}));const o=document.getElementById("header-projectSettings"),a=document.getElementById("header-projectSettingsDropdown");o.addEventListener("click",(()=>{const e=a.style.display;a.style.display="none"===e?"block":"none"})),document.getElementById("header-projectSettingsDelete").addEventListener("click",(()=>{E.removeCurrentProject()}));const s=document.getElementById("taskViewModalContainer");s.addEventListener("click",(e=>{e.target.classList.contains("taskViewModalContainer")&&(s.classList.remove("modalContainer--show"),document.getElementById("taskView").innerHTML="")}))}};b.addProject("My Project 1"),b.addCurrentProjectTask("fight fires","carefully",["clean room","do stuff"],"To-Do"),b.addCurrentProjectTask("hi","hi",["pet da cat"],"To-Do"),b.addProject("My Project 2"),b.addCurrentProjectTask("pet cats","carefully",["clean room","do stuff"],"To-Do"),b.addCurrentProjectTask("hi","hi",["pet da cat"],"To-Do"),b.addProject("My Project 3"),b.addCurrentProjectTask("hi","hi",["clean room","do stuff"],"To-Do"),b.addCurrentProjectTask("hi","hi",["pet da cat"],"To-Do"),y.page.refreshDashboard(),y.staticEventListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,